package com.ibm.ms.security;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.core.userdetails.UserDetailsService;

public class SecurityCredentialConfig  extends WebSecurityConfigurerAdapter{
	
	
@Autowired	
UserDetailsService userDetailsService;

@Autowired
JwtConfig jwtConfig;

@Override
protected void configure(HttpSecurity http) throws Exception {
	http.csrf().disable()
	.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)
	.and()
	.exceptionHandling().authenticationEntryPoint((req,resp,e) -> resp.sendError(HttpServletResponse.SC_UNAUTHORIZED))
	.and()
	.addFilter(new JwtUsernameAndPasswordAuthenticationFilter(authenticationManager(),jwtConfig))
	.authorizeRequests()
	.antMatchers(HttpMethod.POST, jwtConfig.getUri()).permitAll()
    
    .anyRequest().authenticated();
}

}
